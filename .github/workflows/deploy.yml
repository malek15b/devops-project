name: "Deploy App"
on:
  push:
    branches:
      - master

jobs:
  frontend-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: build Frontend
        working-directory: frontend
        run: |
          npm install
          npm run build

      - name: Upload Frontend-Build
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: frontend/dist/*

  build-backend:
    runs-on: ubuntu-latest
    needs: frontend-build
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: frontend-build
          path: backend/src/main/resources/static

      - name: Setup JDK
      - uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: "temurin"
          cache: "maven"

      - name: Build with maven
        run: mvn -B package --file backend/pom.xml

      - uses: actions/upload-artifact@v4
        with:
          name: app.jar
          path: backend/backend-0.0.1.jar

  push-to-docker-hub:
    runs-on: ubuntu-latest
    needs: build-backend

    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: app.jar
          path: backend/target

      - name: Login to DockerHub
      - uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_PASSWORD}}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          push: 'true'
          tags: ${{secrets.DOCKER_HUB_TAG}}
          context: .

    deploy:
      name: deploy-to-render
      runs-on: ubuntu-latest
      needs: push-to-docker-hub
      steps:
        - name: Trigger Render.com Deployment
          run: |
            curl -X POST ${{secrets.RENDER_DEPLOY_HOOK}}
          
      
          


